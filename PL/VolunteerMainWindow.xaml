<Window x:Class="PL.VolunteerMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        xmlns:conv="clr-namespace:PL.Converters"
        mc:Ignorable="d"
        Title="VolunteerMainWindow" Height="650" Width="900"
        Loaded="Window_Loaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="🎵 Welcome To Make Them Happy 🎵"
                   FontSize="24" FontWeight="Bold" Foreground="#3F51B5"
                   HorizontalAlignment="Center" Margin="0,10"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <!--<Label  Grid.Column="0" Content="Volunteer Details"  HorizontalAlignment="Center"/>
            
            <Label Grid.Column="1" Content="Details for call in treatment"  HorizontalAlignment="Center"/>-->
            <!--<StackPanel Grid.Column="0" Margin="10">
                <Label Content="Volunteer Details" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                <TextBlock Text="Name:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.Name}" Margin="0,0,0,10"/>

                <TextBlock Text="Phone:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.Phone}" Margin="0,0,0,10"/>

                <TextBlock Text="Email:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.Email}" Margin="0,0,0,10"/>

                <TextBlock Text="Address:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.Address}" Margin="0,0,0,10"/>

                <TextBlock Text="Active:" FontWeight="Bold"/>
                <CheckBox IsChecked="{Binding Volunteer.Active}" IsEnabled="False" Margin="0,0,0,10"/>

                <TextBlock Text="Role:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.MyRole}" Margin="0,0,0,10"/>

                <TextBlock Text="Total Calls Handled:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.TotalCallsHandled}" Margin="0,0,0,10"/>
                <Button Content="Update My Details"  Click="UpdateVolunteer_Click" Margin="5"/>

            </StackPanel>-->
            <StackPanel Grid.Column="0" Margin="10">
                <Label Content="Volunteer Details" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>

                <!-- Name -->
                <TextBlock Text="Name:" FontWeight="Bold"/>
                <TextBox Text="{Binding Volunteer.Name, UpdateSourceTrigger=PropertyChanged}" 
             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.Name}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Phone -->
                <TextBlock Text="Phone:" FontWeight="Bold"/>
                <TextBox Text="{Binding Volunteer.Phone, UpdateSourceTrigger=PropertyChanged}" 
             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.Phone}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Email -->
                <TextBlock Text="Email:" FontWeight="Bold"/>
                <TextBox Text="{Binding Volunteer.Email, UpdateSourceTrigger=PropertyChanged}" 
             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.Email}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Address -->
                <TextBlock Text="Address:" FontWeight="Bold"/>
                <TextBox Text="{Binding Volunteer.Address, UpdateSourceTrigger=PropertyChanged}" 
             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.Address}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Distance -->
                <TextBlock Text="Max Distance:" FontWeight="Bold"/>
                <TextBox Text="{Binding Volunteer.LargestDistance, UpdateSourceTrigger=PropertyChanged}" 
             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.LargestDistance}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Distance Type -->
                <TextBlock Text="Distance Type:" FontWeight="Bold"/>
                <ComboBox ItemsSource="{Binding DistanceTypes}" SelectedItem="{Binding Volunteer.MyDistanceType}" 
              Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Text="{Binding Volunteer.MyDistanceType}" 
               Visibility="{Binding IsEditMode, Converter={StaticResource InverseBoolToVisibilityConverter}}"
               Margin="0,0,0,10"/>

                <!-- Active -->
                <TextBlock Text="Active:" FontWeight="Bold"/>
                <CheckBox IsChecked="{Binding Volunteer.Active}" 
              IsEnabled="{Binding CurrentCall, Converter={StaticResource NullToBoolConverter}}" 
              Margin="0,0,0,10"/>

                <!-- Role (read-only) -->
                <TextBlock Text="Role:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.MyRole}" Margin="0,0,0,10"/>

                <!-- Total Calls Handled (read-only) -->
                <TextBlock Text="Total Calls Handled:" FontWeight="Bold"/>
                <TextBlock Text="{Binding Volunteer.TotalCallsHandled}" Margin="0,0,0,10"/>

                <TextBlock Text="Password:" FontWeight="Bold"/>
                <!--<PasswordBox Password="{Binding Volunteer.Password, UpdateSourceTrigger=PropertyChanged}" 
                        Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>-->
                <PasswordBox x:Name="PasswordBox" 
                             Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <!-- Update button toggles between Edit/Save -->
                <Button Content="{Binding IsEditMode, Converter={StaticResource EditModeButtonTextConverter}}" 
            Click="ToggleEditMode_Click" Margin="5"/>
            </StackPanel>

            <!-- Current Call Details -->
            <Label Content="Details for call in treatment" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="0,0,0,10" Grid.Column="2"/>

            <StackPanel Grid.Column="1" Margin="10" Visibility="{Binding CurrentCall, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Invert}">
                <!--<Label Content="Details for call in treatment" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>-->

                <TextBlock Text="Call ID:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.CallId}" Margin="0,0,0,10"/>

                <TextBlock Text="Type:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.MyCallType}" Margin="0,0,0,10"/>

                <TextBlock Text="Status:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.MyStatus}" Margin="0,0,0,10"/>

                <TextBlock Text="Verbal Description:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.VerbalDescription}" TextWrapping="Wrap" Margin="0,0,0,10" Width="350"/>

                <TextBlock Text="Address:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.Address}" TextWrapping="Wrap" Margin="0,0,0,10" Width="350"/>

                <TextBlock Text="Open Time:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.OpenTime}" Margin="0,0,0,10"/>

                <TextBlock Text="Max Finish Time:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.MaxFinishTime}" Margin="0,0,0,10"/>

                <TextBlock Text="Entrance Time:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.EntranceTime}" Margin="0,0,0,10"/>

                <TextBlock Text="Distance to Call:" FontWeight="Bold"/>
                <TextBlock Text="{Binding CurrentCall.VolunteerResponseDistance}" Margin="0,0,0,10"/>

                <Button Content="Cancel Treatment" Click="CancelTreatment_Click" Margin="5"/>
                <Button Content="Finish Treatment" Click="FinishTreatment_Click" Margin="5"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="10"
            Visibility="{Binding CurrentCall, Converter={StaticResource NullToVisibilityConverter}}">
                <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center" Padding="10">
                    <TextBlock TextAlignment="Center" TextWrapping="Wrap" Width="280" FontSize="16" Foreground="DarkMagenta" FontWeight="SemiBold" FontFamily="Segoe UI">
        There is currently no call in your care.
        <LineBreak/>
        You can choose a call to treat by clicking on the button below.
                    </TextBlock>
                </Label>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
            <Button Content="Call History" Click="CallHistory_Click" Margin="5"/>
            <Button Content="Choose a call" Click="ChooseCall_Click" Margin="5"
        Visibility="{Binding CurrentCall, Converter={StaticResource NullToVisibilityConverter}}"/>
            <!--IsEnabled="{Binding HasCallInTreatment, Converter={StaticResource InverseBoolConverter}}"--> 
        </StackPanel>

    </Grid>
</Window>
